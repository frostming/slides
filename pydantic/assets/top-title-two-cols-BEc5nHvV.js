import{Q as h,I as i,o as f,b as u,e as t,A as l,x as c,P as g,i as a,f as r,g as w}from"./modules/vue-BE8wNe3U.js";import{u as y}from"./slidev/context-CbpXoCko.js";import{a as T,c as m}from"./layoutHelper-HtdtuDyr.js";import{_ as k}from"./index-D_hQlov-.js";const x={key:0,class:"slidev-layout default error"},b={key:1},$={class:"flex flex-col h-full w-full"},C={class:"slidev-layout toptitle content w-full"},I={class:"flex flex-row h-full w-full"},S={key:0,class:"h-fit w-full"},V={__name:"top-title-two-cols",props:{columns:{default:"is-one-half"},align:{default:"l-lt-lt"},color:{default:"light"}},setup(v){h(o=>({d5c82dfe:n.value.l,d5c82df2:n.value.r})),y();const d=v,n=i(()=>T(d.columns)),s=i(()=>{const o=d.align.split("-");return{t:m(o[0]),l:m(o[1]),r:m(o[2])}}),p=i(()=>`neversink-${d.color}-scheme`);return(o,e)=>n.value=="error"||s.value.t=="error"||s.value.l=="error"||s.value.r=="error"?(f(),u("div",x,[e[10]||(e[10]=t("span",{class:"ns-c-warning"},[t("b",null,"Error"),l(": invalid layout params.")],-1)),e[11]||(e[11]=t("hr",null,null,-1)),t("p",null,[e[0]||(e[0]=l(" There are three parameters: ")),e[1]||(e[1]=t("code",null,"columns",-1)),e[2]||(e[2]=l(", ")),e[3]||(e[3]=t("code",null,"align",-1)),e[4]||(e[4]=l(", and ")),e[5]||(e[5]=t("code",null,"color",-1)),e[6]||(e[6]=l(". Currently: ")),t("code",null,"columns: "+c(d.columns),1),e[7]||(e[7]=l(", ")),t("code",null,"align: "+c(d.align),1),e[8]||(e[8]=l(", and ")),t("code",null,"color: "+c(d.color),1),e[9]||(e[9]=l(". "))]),e[12]||(e[12]=g("<p data-v-de1f10f8> The &quot;slots&quot; of the page are default <code data-v-de1f10f8>:: title ::</code>, <code data-v-de1f10f8>:: left ::</code>, and <code data-v-de1f10f8>:: right ::</code></p><p data-v-de1f10f8> Options for <code data-v-de1f10f8>columns</code> are divided into 12 column units. So with <code data-v-de1f10f8>columns: is-1-11</code> the left column is 1/12 wide and the the right columns is 11/12 wide. The component admits a short had of only specifying the left column (<code data-v-de1f10f8>columns: is-1</code> does the same thing). In addition there are short hands like <code data-v-de1f10f8>columns: is-one-quarter</code> which resolves to <code data-v-de1f10f8>is-3-9</code>, etc... </p><p data-v-de1f10f8> The <code data-v-de1f10f8>align</code> parameter determines how the columns look. The notation is for example <code data-v-de1f10f8>align: c-cm-cm</code>. The first part is for the title, the second for the left column, and the third part is for the right column. The first letter is (<code data-v-de1f10f8>c</code> for center, <code data-v-de1f10f8>l</code> for left, <code data-v-de1f10f8>r</code> for right). This applies to all three second. For the columns the second letter is vertical alignment (<code data-v-de1f10f8>t</code> for top, <code data-v-de1f10f8>m</code> for middle, <code data-v-de1f10f8>b</code> for bottom). </p><p data-v-de1f10f8>The <code data-v-de1f10f8>color</code> parameter determines color of the title.</p>",4))])):(f(),u("div",b,[t("div",$,[t("div",{class:a(["w-full h-fit min-h-13 pt-2 pb-2 slidecolor",p.value])},[t("div",{class:a(["slidev-layout toptitle title p-0 ml-6 mr-6 mt-auto mb-auto",s.value.t])},[r(o.$slots,"title",{},void 0,!0)],2)],2),t("div",C,[t("div",I,[t("div",{class:a(["col-left",s.value.l])},[r(o.$slots,"left",{},void 0,!0)],2),t("div",{class:a(["col-right",s.value.r])},[r(o.$slots,"right",{},void 0,!0)],2)])]),o.$slots.default?(f(),u("div",S,[r(o.$slots,"default",{},void 0,!0)])):w("v-if",!0)])]))}},E=k(V,[["__scopeId","data-v-de1f10f8"]]);export{E as I};
